name: dotnet diagnostic

on: [push]

jobs:
  build-csharp-solution:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['2.1']

    steps:
    - uses: actions/checkout@v3

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Install dependencies
      run: dotnet restore

    - name: Skompiluj projekt i przeslij wynik jako artifact
      run: dotnet build --configuration Release --verbosity minimal
      if: always()
      # Przeciążenie postępu kompilacji zapisując wynik do archiwum
      env:
        BUILD_ID: ${{ github.run_id }}
      # Utwórz archiwum ZIP z plikami wyników kompilacji
    - name: Do zip
      run: zip -r build_results.zip bin/obj build.log
    - name: upload
      run: upload-artifact:build_results.zip
     

    - name: Pobierz archiwum ZIP z wynikami i przeslij je do test-reporter
      uses: actions/download-artifact@v2
      with:
        name: build_results.zip
        path: build_results
      # Przekaż wyniki kompilacji do akcji test-reporter
      run: |
        dorny/test-reporter@v1
        with:
          format: "dotnet"
          build: "${{ github.sha }}"
          coverage: "${{ steps.coverage_report.outputs.coverage }}"
          test_results: "$(cat build_results/build.log)"

